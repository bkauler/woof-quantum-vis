#!/bin/bash

export LANG=C

RP="$(realpath ${0})"
L1="${RP/buildquantumvis*/buildquantumvis}"
xARCH="$(arch)"

. /etc/rc.d/PUPSTATE
mkdir -p /tmp/woofQV

. /var/local/woofQV/VARS #has E1

. ${L1}/configure/${xARCH}/DISTRO_SPECS #has FOREIGN_COMPAT_VERSION, FOREIGN_BINARY_COMPAT
. ${L1}/configure/${xARCH}/DISTRO_PKGS_SPECS #has PKGS_SPECS_TABLE
. ${L1}/configure/${xARCH}/DISTRO_COMPAT_REPOS
. ${L1}/configure/${xARCH}/DISTRO_PET_REPOS
. ${L1}/configure/${xARCH}/PKGS_MANAGEMENT
. ${L1}/configure/${xARCH}/DISTRO_COMPAT_REPOS-${FOREIGN_BINARY_COMPAT}-${FOREIGN_COMPAT_VERSION} #-oe-scarthgap

FIND_CAT="/usr/local/petget/find_cat"

#somewhere for temp files...
echo -n '' > /tmp/woofQV/pkgs-homepages #cvt.sh called from void0setup
cd /tmp/woofQV
echo -n "${L1}" > THISISINTMPWOOFQV #void0setup will test this exists.

echo "Downloading latest package databases"

#download docs on compatible-distro pkgs...
for PKGLISTSPEC in $PKG_DOCS_DISTRO_COMPAT  #see file DISTRO_COMPAT_REPOS
do
 PKGLISTFILE="$(cut -f 3 -d '|' <<<${PKGLISTSPEC})"
 PKGLISTURI="$(cut -f 2 -d '|' <<<${PKGLISTSPEC})"
 DLFILE="${PKGLISTURI##*/}"
 [ "$PKGLISTURI" = "" ] && continue #precaution
 [ -f $DLFILE ] && mv -f $DLFILE /tmp/${DLFILE}-backup1
 echo "Downloading: ${PKGLISTURI}"
 download_file ${PKGLISTURI}
 if [ $? -ne 0 -o ! -s ${DLFILE} ];then
  echo "ERROR pkg db download failed."
  exit 1
 fi
 xDLFILE="$DLFILE"
 #renames x86_64-repodata (which is zstd compressed tarball) to Packages-void-currentpre
 mv -f ${DLFILE} ${PKGLISTFILE}pre
 echo " ...success"
done

#and for scarthgap db...
for PKGLISTSPEC in ${OE_PKG_DOCS_DISTRO_COMPAT}  #see file DISTRO_COMPAT_REPOS-oe-scarthgap
do
 PKGLISTFILE="$(cut -f 3 -d '|' <<<${PKGLISTSPEC})"
 PKGLISTURI="$(cut -f 2 -d '|' <<<${PKGLISTSPEC})"
 DLFILE="${PKGLISTURI##*/}"
 [ "$PKGLISTURI" = "" ] && continue #precaution
 [ -f $DLFILE ] && mv -f $DLFILE /tmp/${DLFILE}-backup1
 echo "Downloading: ${PKGLISTURI}"
 download_file ${PKGLISTURI}
 if [ $? -ne 0 -o ! -s ${DLFILE} ];then
  echo "ERROR pkg db download failed."
  exit 1
 fi
 mv -f ${DLFILE} ${L1}/configure/${xARCH}/${DLFILE}
 echo " ...success"
done

###download pet pkg databases...
for PKGLISTSPEC in $PKG_DOCS_PET_REPOS  #see file DISTRO_PET_REPOS
do
 PKGLISTFILE="$(cut -f 3 -d '|' <<<${PKGLISTSPEC})"
 PKGLISTURI="$(cut -f 2 -d '|' <<<${PKGLISTSPEC})"
 DLFILE="${PKGLISTURI##*/}"
 [ -f $DLFILE ] && mv -f $DLFILE /tmp/${DLFILE}-backup1
 echo "Downloading: ${PKGLISTURI}"
 download_file ${PKGLISTURI}
 if [ $? -ne 0 -o ! -s ${DLFILE} ];then
  echo "ERROR pkg db download failed."
  exit 1
 fi
 mv -f ${DLFILE} ${L1}/configure/${xARCH}/${DLFILE}
 echo " ...success"
done
sync

#convert pkg database ${PKGLISTFILE}pre to a standard format...
PKGLISTS_COMPAT="`echo "$PKG_DOCS_DISTRO_COMPAT" | tr ' ' '\n' | cut -f 3 -d '|' | tr '\n' ' '`" #see file DISTRO_PKGS_SPECS
for ONE_PKGLISTS_COMPAT in $PKGLISTS_COMPAT
do
 [ ! -f ${ONE_PKGLISTS_COMPAT}pre ] && continue
 echo
 echo "Processing into a standard format:  ${ONE_PKGLISTS_COMPAT}"
 echo -n "" > $ONE_PKGLISTS_COMPAT
 echo -n "" > ${ONE_PKGLISTS_COMPAT}temp
 export ONE_PKGLISTS_COMPAT
 ${L1}/support/void0setup
 #void0setup sets category field to "uncategorized", so fix...
 ${FIND_CAT} ${ONE_PKGLISTS_COMPAT} > ${ONE_PKGLISTS_COMPAT}temp
 sort --field-separator='|' --key=1 ${ONE_PKGLISTS_COMPAT}temp > ${L1}/configure/${xARCH}/${ONE_PKGLISTS_COMPAT}
 rm -f ${ONE_PKGLISTS_COMPAT}temp
 echo " ...success"
done
sync
echo "The updated package databases are in ${L1}/configure/${xARCH}"

#void0setup calls cvt.sh which writes to /tmp/woofQV/pkgs-homepages
if [ -s /tmp/woofQV/pkgs-homepages ];then
 cp -f /tmp/woofQV/pkgs-homepages ${L1}/configure/${xARCH}/PKGS_HOMEPAGES
fi
rm -f /tmp/woofQV/THISISINTMPWOOFQV
###end###
