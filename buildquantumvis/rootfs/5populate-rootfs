#!/bin/bash
#from a list of packages, in dependency-order, build the rootfs.

export LANG=C
RP="$(realpath ${0})"
L1="${RP/buildquantumvis*/buildquantumvis}"
xARCH="$(arch)"
mkdir -p /tmp/woofQV
. /var/local/woofQV/VARS #has E1

. /etc/rc.d/PUPSTATE
. ${L1}/configure/${xARCH}/DISTRO_SPECS
. ${L1}/configure/${xARCH}/DISTRO_PKGS_SPECS #has PKGS_SPECS_TABLE
. ${L1}/configure/${xARCH}/DISTRO_COMPAT_REPOS
. ${L1}/configure/${xARCH}/DISTRO_PET_REPOS

export XBPS_ARCH="$xARCH"

mkdir -p ${E1}/dl-pet
mkdir -p ${E1}/dl-xbps
mkdir -p ${E1}/dl-txz
mkdir -p ${E1}/rootfs/repo
mkdir -p /tmp/woofQV
mkdir -p ${E1}/sandbox
echo -n '' > /tmp/woofQV/5errors.log

#flag that running in woofQV.  20240320 no longer used
touch /tmp/FLAGrunningwoofv

which xbps-create >/dev/null
if [ $? -ne 0 ];then
 echo "ERROR: xbps package not installed."
 exit 1
fi

echo "$(LANG=${LANGorig} gettext 'Installing pkgs to:') ${E1}/rootfs"

mkdir -p ${E1}/rootfs/var/cache/xbps
grep -q 'rootfs/var/cache/xbps' /proc/mounts
if [ $? -ne 0 ];then
 busybox mount -o bind ${E1}/dl-xbps ${E1}/rootfs/var/cache/xbps
fi
grep -q 'rootfs/proc' /proc/mounts
if [ $? -ne 0 ];then
 busybox mount -o bind /proc ${E1}/rootfs/proc
fi

#non-xbps pkgs get converted to .xbps then installed.
#keep a record of these conversions...
mkdir -p ${E1}/converted-pkgs

#read each entry in ${E1}/woof-installed-packages-dep-order...
CNT=0
while read aL
do
 cat <<<${aL} > /tmp/woofQV/aDBentry
 WIPnameonly="$(cut -f 2 -d '|' <<<${aL})"    #ex: 9menu
 WIPversion="$(cut -f 3 -d '|' <<<${aL})"     #ex: 1.2.3
 WIPrevision="$(cut -f 4 -d '|' <<<${aL})"    #ex: r6
 WIPpkg="$(cut -f 8 -d '|' <<<${aL})"         #ex: 9menu-1.10_1.x86_64.xbps
 WIPcompatname="$(cut -f 11 -d '|' <<<${aL})" #ex: void
 WIPcompatver="$(cut -f 12 -d '|' <<<${aL})"  #ex: current
 
 #read generic-name and pkgs-split...
 PST="$(grep "^yes.*[,|]${WIPnameonly}[,|]" <<<${PKGS_SPECS_TABLE} | head -n 1)"
 #do it this way, more definite... nah
 #PST="$(grep "|${WIPnameonly}|${WIPversion}|${WIPrevision}" ${E1}/woof-installed-packages-PST | cut -f 13- -d '|')"
 #ex: yes|acl|acl|exe,doc>null|compat:current|
 #ex: yes|915resolution|915resolution|exe,doc>null|pet:void|
 #ex: yes|android-tools|android-tools|exe,dev,doc>null|compat:kirkstone|
 if [ ! -z "$PST" ];then
  PSTgeneric="$(cut -f 2 -d '|' <<<${PST})"
  PSTpkgs="$(cut -f 3 -d '|' <<<${PST})"
  PSTsplit="$(cut -f 4 -d '|' <<<${PST})"
  PSTrepo="$(cut -f 5 -d '|' <<<${PST})"
 else
  #support/sort-dep-order finds deps that are not listed in PKGS_SPECS_TABLE...
  #these will be from the void repo
  PSTgeneric='XXXXXXXXX'
  PSTpkgs="$WIPnameonly"
  PSTrepo='compat:current'
  case "$WIPnameonly" in
   *-devel) PSTsplit='dev' ;;
   *) PSTsplit='exe' ;;
  esac
 fi
 [ -z "$PSTgeneric" ] && continue #precaution
 
 CNT=$((${CNT}+1))
 case "$PSTrepo" in
  pet:*)
   case "${PSTrepo#*:}" in
    noarch)
     DBFILE="Packages-pet-noarch-official"
     URL="https://distro.ibiblio.org/easyos/noarch/packages/pet/pet_packages-noarch"
    ;;
    *) #pet:void
     DBFILE="Packages-pet-void-official"
     URL="https://distro.ibiblio.org/easyos/${DISTRO_TARGETARCH}/packages/pet/pet_packages-void"
    ;;
   esac
   #is it already downloaded?...
   VER="$(cut -f 3 -d '|' <<<${aL})_1"
   #pets may have weird versioning, need to remove any alpha chars...
   xWIPversion="$(echo -n "$WIPversion" | sed -e 's%[^0-9.]%%g')"
   VER="${xWIPversion}_1" #append a revision-number
   #test if already converted to .xbps...
   ls ${E1}/converted-pkgs/${PSTgeneric}-${VER}*.xbps >/dev/null 2>&1
   if [ $? -ne 0 ];then
    PETname="${WIPpkg}" #ex: align-1.7.5.pet
    if [ ! -f ${E1}/dl-pet/${PETname} ];then
     cd ${E1}/dl-pet
     download_file ${URL}/${PETname}
     if [ $? -ne 0 ];then
      echo "ERROR failed to download: ${PETname}"
      echo "From: ${URL}"
      rm -f ./${PETname} 2>/dev/null
      echo "FAIL D/L ${PETname} from ${URL}" >> /tmp/woofQV/5errors.log
      continue
     fi
    fi
    #convert it to an .xbps pkg...
    ${L1}/support/pet2xbps ${E1}/dl-pet/${PETname} /tmp/woofQV/aDBentry ${PSTgeneric}
    [ $? -ne 0 ] && continue
    #....xbps will be in ${E1}/converted-pkgs/
   fi
   Pxbps="$(ls ${E1}/converted-pkgs/${PSTgeneric}-${VER}*.xbps)"
   Pxbps="${Pxbps##*/}"
   #check if already installed...
   #INST="$(chroot ${E1}/rootfs /usr/bin/xbps-query --show ${PSTgeneric}-${VER} --property state)"
   INST="$(chroot ${E1}/rootfs /usr/bin/xbps-query --show ${PSTgeneric} --property state)"
   if [ "$INST" == "installed" ];then
    #this means xbps has already installed from the void repo. not what we want.
    #need to replace it with the pet...
    chroot ${E1}/rootfs /usr/bin/xbps-remove -f -O -y ${PSTgeneric}
   fi
   
   #register pkg in local repo inside rootfs...
   cp -a -f ${E1}/converted-pkgs/${Pxbps} ${E1}/rootfs/repo/
   chroot ${E1}/rootfs /usr/bin/xbps-rindex --add /repo/${Pxbps}
   #install...
   echo -n "${Pxbps} "
   chroot ${E1}/rootfs /usr/bin/xbps-install --yes --ignore-file-conflicts --repository=/repo ${PSTgeneric}-${VER}
   sync
   #in case there is a pkg in void repo with same name, prevent the pet from being replaced...
   chroot ${E1}/rootfs /usr/bin/xbps-pkgdb -m hold ${PSTgeneric}-${VER}
   rm -rf ${E1}/rootfs/repo/* #stop from growing.
   #log pet name vs xbps pkg name...
   echo "CONV_PKG_REPO='${PSTrepo}'" > ${E1}/converted-pkgs/${PSTgeneric} #ex: pet:noarch
   echo "CONV_PKG_DB='${aL}'" >> ${E1}/converted-pkgs/${PSTgeneric}
   echo "CONV_XBPS_PKGFULL='${Pxbps}'" >> ${E1}/converted-pkgs/${PSTgeneric} #ex: tas-1.15_1.x86_64.xbps
   echo "CONV_XBPS_PKGVER='${PSTgeneric}-${VER}'" >> ${E1}/converted-pkgs/${PSTgeneric}
   continue
  ;;
 esac
  
 [ -z "$WIPcompatver" ] && continue #insist must exist. ex: void:current
 case "${WIPcompatname}:${WIPcompatver}" in
  void:current)
   case "$WIPnameonly" in
    *-devel)
     continue #ignore for now ***TO DO***
    ;;
   esac
   DONOTOPEN=0
   if [ -d ${L1}/pkg-fix/packages-templates/${PSTgeneric} ];then
    #20240313 change: only open up pkg if have FIXUPHACK file...
    if [ ! -f ${L1}/pkg-fix/packages-templates/${PSTgeneric}/FIXUPHACK ];then
     DONOTOPEN=1
    fi
   fi
   #check if already installed...
   INST="$(chroot ${E1}/rootfs /usr/bin/xbps-query --show ${WIPnameonly} --property state)"
   if [ "$INST" == "installed" ];then
    if [ -d ${L1}/pkg-fix/packages-templates/${PSTgeneric} -a $DONOTOPEN -eq 0 ];then
     #will be applying package-templates, so need to uninstall...
     chroot ${E1}/rootfs /usr/bin/xbps-remove -f -O -y ${WIPnameonly}
     INST="$(chroot ${E1}/rootfs /usr/bin/xbps-query --show ${WIPnameonly} --property state)"
    fi
   fi
   if [ "$INST" != "installed" ];then
    #is it already downloaded?...
    #this will d/l to rootfs/var/cache/xbps, including deps...
    #note, dl-xbps is bind-mounted on rootfs/var/cache/xbps
    chroot ${E1}/rootfs /usr/bin/xbps-install --yes --download-only ${WIPnameonly}
    PkgVer="$(chroot ${E1}/rootfs /usr/bin/xbps-query --show ${WIPnameonly} --repository --property pkgver)"
    Pwant="$(find ${E1}/dl-xbps -mindepth 1 -maxdepth 1 -type f -name "${PkgVer}.*.xbps" | tail -n 1)"
    Pxbps="${Pwant##*/}"
    [ -z "${Pxbps}" ] && continue #precaution
    VER="$(sed -e "s%^${WIPnameonly//+/\\+}-%%" <<<${PkgVer})" #escape + as regex.
    
    #install xbps pkg...
    #problem is, there may be fixes in packages-templates, to be applied
    #before installing. so, open it up, apply fixes, then repackage...
      
    #apply fixes, then put together again...
    GENflg=0
    if [ -d ${L1}/pkg-fix/packages-templates/${PSTgeneric} -a $DONOTOPEN -eq 0 ];then
     GENflg=1
     #based on 2createpackages in woofQ, but simplified...
     mkdir -p ${E1}/sandbox #quick hack, sandbox got deleted.
     cd ${E1}/sandbox
     Pdir="${Pxbps/.xbps/}"  #ex: Pxbps=libgcc-12.2.0_4.x86_64.xbps
     mkdir $Pdir
     cd $Pdir
     tar --force-local --zstd -xf ${Pwant}
     cd ..
       
     #apply fixes...
     ${L1}/pkg-fix/template-fix ${PSTgeneric} ${WIPcompatname} ${E1}/sandbox/${Pdir}
     
     #repackage as .xbps...
     #***WARNING*** .plist file will be different from online repo!!!
     #don't remove "INSTALL" here, template-fix may remove it...
     for aR in REMOVE files.plist props.plist
     do
      rm -f ${E1}/sandbox/${Pdir}/${aR} 2>/dev/null
     done
     DESC="$(cut -f 10 -d '|' <<<${aL})"
     [ -z "$DESC" ] && DESC='no description'
     #deps is a problem, as the pkgget db does not include versions. so get from xbps db...
     DEPS="$(chroot ${E1}/rootfs /usr/bin/xbps-query --show ${WIPnameonly}-${VER} --repository --property run_depends | tr '\n' ' ')"
     yARCH="$(chroot ${E1}/rootfs /usr/bin/xbps-query --show ${WIPnameonly}-${VER} --repository --property architecture | tr '\n' ' ')"
     SHLREQ="$(chroot ${E1}/rootfs /usr/bin/xbps-query --show ${WIPnameonly}-${VER} --repository --property shlib-requires | tr '\n' ' ')"
     SHLPROV="$(chroot ${E1}/rootfs /usr/bin/xbps-query --show ${WIPnameonly}-${VER} --repository --property shlib-provides | tr '\n' ' ')"
     LICENSE="$(chroot ${E1}/rootfs /usr/bin/xbps-query --show ${WIPnameonly}-${VER} --repository --property license | tr '\n' ' ')"
     REPLACES="$(chroot ${E1}/rootfs /usr/bin/xbps-query --show ${WIPnameonly}-${VER} --repository --property replaces | tr '\n' ' ')"
     PROVIDES="$(chroot ${E1}/rootfs /usr/bin/xbps-query --show ${WIPnameonly}-${VER} --repository --property provides | tr '\n' ' ')"
     echo "xbps-create -n \"${WIPnameonly}-${VER}\" -s \"${DESC}\" -A ${yARCH} -D \"${DEPS}\" --shlib-requires \"${SHLREQ}\" --shlib-provides \"${SHLPROV}\" --license \"${LICENSE}\" --replaces \"${REPLACES}\" \"${E1}/sandbox/${Pdir}\"" 1>&2 #error log
     xbps-create -n "${WIPnameonly}-${VER}" -s "${DESC}" -A ${yARCH} -D "${DEPS}" --shlib-requires "${SHLREQ}" --shlib-provides "${SHLPROV}" --license "${LICENSE}" --replaces "${REPLACES}" "${E1}/sandbox/${Pdir}"
     [ $? -ne 0 ] && continue #precaution
     Pxbps="$(ls ${WIPnameonly}-${VER}*.xbps)" #ex: acl-2.3.1_1.x86_64.xbps
     Pxbps="${Pxbps##*/}"
     Pwant="${E1}/sandbox/${Pxbps}"
     rm -rf "${E1}/sandbox/${Pdir}" #this is the expanded fixed folder.
     cp -f ${Pwant} ${E1}/rootfs/repo/
     mv -f ${Pwant} ${E1}/converted-pkgs/
     #log orig db vs new xbps pkg name... actually, the .xbps pkg name is unchanged
     echo "CONV_PKG_REPO='${PSTrepo}'" > ${E1}/converted-pkgs/${PSTgeneric} #ex: compat:void
     echo "CONV_PKG_DB='${aL}'" >> ${E1}/converted-pkgs/${PSTgeneric}
     echo "CONV_XBPS_PKGFULL='${Pxbps}'" >> ${E1}/converted-pkgs/${PSTgeneric} #ex: acl-2.3.1_1.x86_64.xbps
     echo "CONV_XBPS_PKGVER='${WIPnameonly}-${VER}'" >> ${E1}/converted-pkgs/${PSTgeneric}
     
     #register pkg in local repo inside rootfs...
     chroot ${E1}/rootfs /usr/bin/xbps-rindex -a /repo/${Pxbps}
     #install it...
     chroot ${E1}/rootfs /usr/bin/xbps-install --yes --ignore-file-conflicts --repository=/repo ${WIPnameonly}-${VER}
    else
     #install it...
     chroot ${E1}/rootfs /usr/bin/xbps-install --yes --ignore-file-conflicts ${WIPnameonly}-${VER}
    fi
    sync
    if [ $GENflg -eq 1 -o $DONOTOPEN -eq 1 ];then
     #prevent xbps from updating this pkg...
     chroot ${E1}/rootfs /usr/bin/xbps-pkgdb -m hold ${WIPnameonly}-${VER}
     rm -rf ${E1}/rootfs/repo/* #stop from growing.
    fi
   fi
   if [ -f ${L1}/pkg-fix/packages-templates/${PSTgeneric}/pinstall.sh ];then #20240313
    echo "echo 'TEST pinstall.sh: ${PSTgeneric}' 1>&2" >> ${E1}/sandbox/pinstall.sh #for debugging
    cat ${L1}/pkg-fix/packages-templates/${PSTgeneric}/pinstall.sh >> ${E1}/sandbox/pinstall.sh
   fi
   if [ -d ${L1}/pkg-fix/packages-templates/${PSTgeneric}/REPLACEMENTS ];then #20240313
    cp -a -f --remove-destination ${L1}/pkg-fix/packages-templates/${PSTgeneric}/REPLACEMENTS/* ${E1}/rootfs/
   fi
  ;;
  
  oe:kirkstone)
   #lookup support/name-oe2void find if name change required
   #note, have left out file 'maybe'... note, basic-regex, + and | are literal characters...
   F1="$(grep -m 1 -h -G "^${WIPnameonly}|" ${L1}/support/name-oe2void/exact ${L1}/support/name-oe2void/case ${L1}/support/name-oe2void/hyphen ${L1}/support/name-oe2void/number)"
   if [ ! -z "$F1" ];then
    Newnameonly="${F1/*|/}"
   else
    Newnameonly="${WIPnameonly}"
   fi
   #version needs to be simplified to keep xbps happy...
   Newver="$(sed -e 's%[^0-9.]%%g' <<<${WIPversion})"
   
   #20240418 hack
   #oe gutenprint pkg has version "git"
   if [ -z "${Newver}" ];then
    Newver='2024'
   fi
   
   #check if already installed...
   INST="$(chroot ${E1}/rootfs /usr/bin/xbps-query --show ${Newnameonly} --property state)"
   if [ "$INST" == "installed" ];then
    #this means xbps has already installed from the void repo. not what we want.
    #need to replace it with this one from kirkstone...
    chroot ${E1}/rootfs /usr/bin/xbps-remove -f -O -y ${Newnameonly}
   fi

   if [ -d ${L1}/pkg-fix/packages-templates/${PSTgeneric} ];then
    if [ -f ${L1}/pkg-fix/packages-templates/${PSTgeneric}/pinstall.sh ];then
     #20240223 do this here, instead of in template-fix...
     echo "echo 'TEST pinstall.sh: ${PSTgeneric}' 1>&2" >> ${E1}/sandbox/pinstall.sh #for debugging
     cat ${L1}/pkg-fix/packages-templates/${PSTgeneric}/pinstall.sh >> ${E1}/sandbox/pinstall.sh
    fi
   fi
   
   #if already converted to .xbps, can skip some code below...
   if [ -f ${E1}/converted-pkgs/${Newnameonly}-${Newver}_${WIPrevision/r/}.${xARCH}.xbps ];then
    Pwant="${E1}/converted-pkgs/${Newnameonly}-${Newver}_${WIPrevision/r/}.${xARCH}.xbps"
    Pxbps="${Newnameonly}-${Newver}_${WIPrevision/r/}.${xARCH}.xbps"
   else
    #is it already downloaded?...
    if [ ! -f ${E1}/dl-txz/${WIPpkg} ];then
     cd ${E1}/dl-txz
     download_file https://distro.ibiblio.org/easyos/${DISTRO_TARGETARCH}/packages/compat/oe/kirkstone/${WIPpkg}
     if [ $? -ne 0 ];then
      echo "ERROR failed to download: ${WIPpkg}"
      echo "From: ${URL}"
      rm -f ./${WIPpkg} 2>/dev/null
      echo "FAIL D/L Kirkstone ${WIPpkg}" >> /tmp/woofQV/5errors.log
      continue
     fi
    fi
    
    #always expand.
    mkdir -p ${E1}/sandbox #quick hack, sandbox got deleted.
    cd ${E1}/sandbox
    Pdir="${WIPpkg/.tar.xz/}"  #ex: WIPpkg=acl-2.3.1-r6-nocona-64.tar.xz
    mkdir $Pdir
    cd $Pdir
    tar --force-local --zstd -xf ${E1}/dl-txz/${WIPpkg}
    cd ..
    
    #after expanding, if /usr/sbin exists but not hyperlink, fix it.
    #note, kirkstone pkgs are usr-merge, but not /usr/sbin
    if [ -d ${Pdir}/usr/sbin ];then
     if [ ! -h ${Pdir}/usr/sbin ];then
      mkdir -p ${Pdir}/usr/bin
      cp -a -f --remove-destination ${Pdir}/usr/sbin/* ${Pdir}/usr/bin/
      rm -rf ${Pdir}/usr/sbin
      #ln -s bin ${Pdir}/usr/sbin
      ${L1}/pkg-fix/symlinks-fix ${E1}/sandbox/${Pdir}
     fi
    fi
    
    #split the pkg into ${Pdir}, ${Pdir}_DEV, ${Pdir}_DOC
    ${L1}/pkg-fix/pkg-split "${PSTsplit}" "${Pdir}"
    if [ ! -d ${Pdir} ];then
     #most likely entire folder got renamed to ${Pdir}_DEV, which we are not yet handling.
     continue
    fi
    
    #if pkg-fix/packages-templates/$PSTgeneric, than call template-fix
    if [ -d ${L1}/pkg-fix/packages-templates/${PSTgeneric} ];then
     ${L1}/pkg-fix/template-fix ${PSTgeneric} ${WIPcompatname} ${E1}/sandbox/${Pdir}
    fi
    #20240313 moved out of template-fix...
    if [ -d ${L1}/pkg-fix/packages-templates/${PSTgeneric}/REPLACEMENTS ];then
     cp -a -f --remove-destination ${L1}/pkg-fix/packages-templates/${PSTgeneric}/REPLACEMENTS/* ${E1}/sandbox/${Pdir}/
    fi
    
    #packages-templates/<generic>/FIXUPHACK may have created this file...
    XBPS_CREATE_SHLIB_PROVIDES=''; SLP=''
    XBPS_CREATE_EXTRA_DEPS=''
    if [ -f /tmp/woofQV/pt-${Newnameonly} ];then
     . /tmp/woofQV/pt-${Newnameonly} #may have $SHLIB_PROVIDES
    fi
    
    #convert pkg-folder to .xbps
    DESC="$(cut -f 10 -d '|' <<<${aL})"
    [ -z "$DESC" ] && DESC='no description'
    #deps need to be converted to xbps repo names if possible...
    DEPS="$(cut -f 9 -d '|' <<<${aL} | sed -e 's%^[+]%%' -e 's%,[+]% %g')"
    DEPS2=''
    #xbps-install will refuse to install if a dep is not a valid xbps pkg...
    #also requires version... could cheat and just have ">=0.0_0"
    for aDEP in ${DEPS}
    do
     F1="$(grep -m 1 -h -G "^${aDEP}|" ${L1}/support/name-oe2void/exact ${L1}/support/name-oe2void/case ${L1}/support/name-oe2void/hyphen ${L1}/support/name-oe2void/number | head -n 1)"
     if [ ! -z "$F1" ];then
      F2="${F1/*|/}" #escape any + for regex...
      V2="$(chroot ${E1}/rootfs /usr/bin/xbps-query --show ${F2} --repository --property pkgver | head -n 1 | sed -e "s%^${F2//+/\\+}-%%")"
      [ -z "$V2" ] && V2='0.0_0'
      DEPS2="${DEPS2}${F2}>=${V2} "
     fi
    done
    if [ ! -z "$XBPS_CREATE_EXTRA_DEPS" ];then #ex: packages-templates/dbus
     DEPS2="${DEPS2}${XBPS_CREATE_EXTRA_DEPS}"
    fi
    DEPS2="$(sed -e 's% $%%' <<<${DEPS2})"
    
    if [ ! -z "$XBPS_CREATE_SHLIB_PROVIDES" ];then
     SLP="--shlib-provides \"${XBPS_CREATE_SHLIB_PROVIDES}\""
    fi
    echo "xbps-create -n \"${Newnameonly}-${Newver}_${WIPrevision/r/}\" -s \"${DESC}\" -A ${xARCH} -D \"${DEPS2}\" ${SLP} \"${E1}/sandbox/${Pdir}\"" 1>&2
    xbps-create -n "${Newnameonly}-${Newver}_${WIPrevision/r/}" -s "${DESC}" -A ${xARCH} -D "${DEPS2}" ${SLP} "${E1}/sandbox/${Pdir}"
    [ $? -ne 0 ] && continue #precaution
    Pxbps="$(ls ${Newnameonly}-${Newver}_${WIPrevision/r/}*.xbps)" #ex: acl-2.3.1_6.x86_64.xbps
    Pxbps="${Pxbps##*/}"
    
    #log orig db vs new xbps pkg name...
    echo "CONV_PKG_REPO='${PSTrepo}'" > ${E1}/converted-pkgs/${PSTgeneric} #ex: compat:kirkstone
    echo "CONV_PKG_DB='${aL}'" >> ${E1}/converted-pkgs/${PSTgeneric}
    echo "CONV_XBPS_PKGFULL='${Pxbps}'" >> ${E1}/converted-pkgs/${PSTgeneric} #ex: acl-2.3.1_1.x86_64.xbps
    echo "CONV_XBPS_PKGVER='${Newnameonly}-${Newver}_${WIPrevision/r/}'" >> ${E1}/converted-pkgs/${PSTgeneric}
    
    #install .xbps
    Pwant="${E1}/sandbox/${Pxbps}"
    rm -rf "${E1}/sandbox/${Pdir}" #this is the expanded fixed folder.
   fi
    
   cp -f ${Pwant} ${E1}/rootfs/repo/
   #register pkg in local repo inside rootfs...
   chroot ${E1}/rootfs /usr/bin/xbps-rindex -a /repo/${Pxbps}
   #install it...
   chroot ${E1}/rootfs /usr/bin/xbps-install --yes --ignore-file-conflicts --repository=/repo ${Newnameonly}-${Newver}_${WIPrevision/r/}
   sync
   #the kirkstone pkg is likely to be an older version than in the void repo, so prevent update...
   chroot ${E1}/rootfs /usr/bin/xbps-pkgdb -m hold ${Newnameonly}-${Newver}_${WIPrevision/r/}
   rm -rf ${E1}/rootfs/repo/* #stop from growing.
   #save it, so maybe can reuse...
   if [ ! -f ${E1}/converted-pkgs/${Pxbps} ];then
    mv -f ${Pwant} ${E1}/converted-pkgs/
   fi
   if [ -f ${E1}/sandbox/${Pxbps} ];then
    rm -f ${E1}/sandbox/${Pxbps}
   fi
  ;;
 esac
done < ${E1}/woof-installed-packages-dep-order

###post-processing###

#20240221 xbps has installed some -devel pkgs, get rid of them...
echo "Removing some -devel pkgs from rootfs"
for aD in $(chroot ${E1}/rootfs /usr/bin/xbps-query -l | cut -f 2 -d ' ' | grep '\-devel-' | tr '\n' ' ')
do
 echo -n "${aD} "
 chroot ${E1}/rootfs /usr/bin/xbps-remove -F -y ${aD}
done
echo

#delete any circular symlinks...
cd ${E1}
echo "Looking for circular symlinks"
FNDall="$(busybox find rootfs -mindepth 1 -maxdepth 4 -type d 2>/dev/null | busybox xargs -I ZZZ busybox find ZZZ -mindepth 1 -maxdepth 1 -follow 2>&1)"
#ex: usr/lib/ld-linux-x86-64.so.2 symlink to ../../lib/ld-linux-x86-64.so.2
# busybox find: find: rootfs/usr/lib/ld-linux-x86-64.so.2: Symbolic link loop
# full find: find: ‘rootfs/usr/lib/ld-linux-x86-64.so.2’: Too many levels of symbolic links
LNKcirc="$(echo "$FNDall" | grep 'Symbolic link loop' | cut -f 2 -d ' ' | cut -f 1 -d ':' | tr '\n' ' ')"
for aLNK in $LNKcirc
do
 rm -f ./${aLNK}
done

#copy the skeleton, yes, again, as a pkg may have overwritten a skeleton file...
echo "Recopying rootfs-skeleton to rootfs"
cp -a -f --remove-destination rootfs-skeleton/* rootfs/
sync

#20240318 copy some of woofQV into rootfs...
#all config files are in rootfs/.packages...
echo "Populating rootfs/.packages"
mkdir -p rootfs/root/.packages
cp -a -f ${L1}/configure/${xARCH}/* rootfs/root/.packages/
cp -a ${E1}/woof-installed-packages rootfs/root/.packages/
cp -a ${E1}/woof-installed-packages-dep-order rootfs/root/.packages/
cp -a ${E1}/devx-only-installed-packages rootfs/root/.packages/
echo "Populating rootfs/usr/local/petget/pkg-fix & support"
cp -a ${L1}/pkg-fix rootfs/usr/local/petget/
cp -a ${L1}/support rootfs/usr/local/petget/

#packages-templates and pet pkgs may have these. accumulated...
if [ -s ${E1}/sandbox/pinstall.sh ];then
 echo "TEST Executing ${E1}/sandbox/pinstall.sh" 1>&2
 echo 'echo
pwd 1>&2
echo "TEST sandbox/pinstall.sh completed" 1>&2' >> ${E1}/sandbox/pinstall.sh
 cd ${E1}/rootfs
 /bin/bash ../sandbox/pinstall.sh
fi
sync

busybox umount ${E1}/rootfs/var/cache/xbps
busybox umount ${E1}/rootfs/proc

#20240229 default is /var/cache/xbps, where pkgs will be downloaded to.
#important; this has to be at end after having populated rootfs
echo "cachedir=/data/woofQV/dl-xbps" > ${E1}/rootfs/etc/xbps.d/30-dl-cache.conf

#delete leftovers...
if [ -f ${E1}/rootfs/pinstall.sh ];then
 rm -f ${E1}/rootfs/pinstall.sh
fi
if [ -f ${E1}/rootfs/pet.specs ];then
 rm -f ${E1}/rootfs/pet.specs
fi
if [ -f ${E1}/rootfs/pkg.specs ];then
 rm -f ${E1}/rootfs/pkg.specs
fi

rm -f /tmp/FLAGrunningwoofv
#post-processing continues in 6post-process-rootfs
###end###
