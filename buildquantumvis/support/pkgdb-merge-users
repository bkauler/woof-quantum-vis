#!/bin/sh
#pkgdb-extract-users extracted user-installed packages from pkgdb-0.38.plist
#and put them into ${E2}update/extracted-user-installed/
#after a easyvoid version update, /var/db/xbps/pkgdb-0.38.plist in easy.sfs
#only has the pkgs builtin to easy.sfs. the user-installed entries need to be merged.
#pass in path to pkgdb-0.38.plist

#at a version update, expect DB1='/mnt/.easy_ro/easy_sfs/var/db/xbps/pkgdb-0.38.plist
DB1="$1"
Pfile="${DB1##*/}"
E2='/data'
#${E2}/update/extracted-user-installed has been created by pkgdb-extract-users
mkdir -p ${E2}/update/extracted-user-installed
rm -rf ${E2}/update/extracted-builtin-installed 2>/dev/null
rm -rf ${E2}/update/extracted-all-installed 2>/dev/null
mkdir ${E2}/update/extracted-builtin-installed
mkdir ${E2}/update/extracted-all-installed

FL="$(ls -1 ${E2}/update/extracted-user-installed)"
if [ -z "$FL" ];then
 #empty directory.
 cp -a -f ${DB1} ${E2}/update/${Pfile}NEW
 exit
fi

#break each pkg into a paragraph...
sed -e 's%^	<key>%\n	<key>%' ${DB1} > ${E2}/update/pkgdb-paras-builtin

USERDBS="$(find ${E2}/update/extracted-user-installed -mindepth 1 -maxdepth 1 -type f)"

#i wonder if really need to merge in alphabetical order?
#break up entire pkgdb-0.38.plist into paragraphs...
NAME='AAAAAA'
while IFS= read -r aL
do
 if [ "$aL" == "" ];then
  read aL
  NAME="$(cut -f 2 -d '>' <<<${aL} | cut -f 1 -d '<')" #ex: <key>libwv</key>
  echo -n "	" > ${E2}/update/extracted-builtin-installed/${NAME}
 fi
 echo -n '.'
 echo "${aL}" >> ${E2}/update/extracted-builtin-installed/${NAME}
done <${E2}/update/pkgdb-paras-builtin
rm -f ${E2}/update/extracted-builtin-installed/AAAAAA
echo

#put them all in same folder...
cp -a ${E2}/update/extracted-builtin-installed/* ${E2}/update/extracted-all-installed/
cp -a -f ${E2}/update/extracted-user-installed/* ${E2}/update/extracted-all-installed/
ALPHALIST="$(ls -1 ${E2}/update/extracted-builtin-installed | sort -d)"

#merge...
echo '<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>' > ${E2}/update/${Pfile}NEW

for aA in ${ALPHALIST}
do
 [ -z "$aA" ] && continue
 cat ${E2}/update/extracted-all-installed/${aA} >> ${E2}/update/${Pfile}NEW
done

echo '</dict>
</plist>' >> ${E2}/update/${Pfile}NEW

#sed -i '/^$/d' ${E2}/update/${Pfile}NEW
sync
###end###
