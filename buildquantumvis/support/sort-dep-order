#!/bin/bash
#sort woof-installed-packages into dep order.
#called from 4create-wip-dep-order
#must run after support/findwoofinstalledpkgs

export LANG=C

RP="$(realpath ${0})"
if [ "${RP/*buildquantumvis*/yes}" == "yes" ];then
 #running in woofQV
 L1="${RP/buildquantumvis*/buildquantumvis}"
 RUNNINGWOOF=yes
else
 #running in quirky
 L1='/usr/local/petget'
 #...note, woofQV has copied pkg-fix and support folders into /usr/local/petget
 RUNNINGWOOF=no
fi

xARCH="$(arch)"
mkdir -p /tmp/woofQV
. /var/local/woofQV/VARS #has E1

. ${L1}/configure/${xARCH}/DISTRO_SPECS #has FOREIGN_BINARY_COMPAT, FOREIGN_COMPAT_VERSION
. ${L1}/configure/${xARCH}/PKGS_MANAGEMENT #has PKG_NAME_ALIASES, PKG_NAME_IGNORE
. ${L1}/configure/${xARCH}/DISTRO_PKGS_SPECS #has PKGS_SPECS_TABLE

echo "Sorting woof-installed-packages into dependency-order..."

which tsort >/dev/null
if [ $? -ne 0 ];then
 echo "ERROR: tsort utility is mssing. It is in the coreutils pkg."
 exit 1
fi

TStest="$(tsort --help 2>&1 | grep -o 'BusyBox')"
if [ "$TStest" == "BusyBox" ];then
 echo "ERROR: you need the full tsort utility from coreutils."
 echo "       It seems that you have the tsort busybox applet."
 exit 1
fi

cd /tmp/woofQV
cp -f ${E1}/woof-installed-packages ${E1}/woof-installed-packages-orig
cp -f ${E1}/woof-installed-packages woof-installed-packages
tr ' ' '\n' <<<${PKG_NAME_IGNORE} > PKG_NAME_IGNORElines
echo -n '' > xdb2and9NEW
echo -n '' > xdb2and9NEW-DEVX

cut -f 2,9 -d '|' woof-installed-packages > db2and9
#deps should all be void names...
echo -n '' > xdb2and9
while IFS='|' read Name Deps
do
 #prefix | improves non-regex grep...
 echo -n "|${Name}|" >> xdb2and9
 xDeps=''
 for aDep in $(sed -e 's%^[+]%%' -e 's%,[+]% %g' <<<${Deps})
 do
  [ -z "$aDep" ] && continue
  #lookup support/name-oe2void find if name change required
  #note, have left out file 'maybe'... no, include 'maybe'...
  #note, basic-regex + and | are literal chars no need to escape...
  F1="$(grep -h -G "^${aDep}|" ${L1}/support/name-oe2void/case ${L1}/support/name-oe2void/hyphen ${L1}/support/name-oe2void/number ${L1}/support/name-oe2void/maybe | head -n 1)"
  if [ ! -z "$F1" ];then
   aDep="${F1/*|/}"
  fi
  if [ -z "$xDeps" ];then
   xDeps="+${aDep}"
  else
   xDeps="${xDeps},+${aDep}"
  fi
 done
 echo "${xDeps}" >> xdb2and9
done < db2and9

#ex: |atk|+glib,+glibc
#these are all the free pkgs available in the void repo...
cut -f 2,9 -d '|' ${L1}/configure/${xARCH}/Packages-${DISTRO_BINARY_COMPAT}-${DISTRO_COMPAT_VERSION} > db2and9VOID
sed -e 's%^%|%' db2and9VOID > xdb2and9VOID #prefix | improves non-regex grep

#add missing pkgs to woof-installed-packages...
for aDEP in $(cut -f 3 -d '|' xdb2and9 | sed -e 's%^[+]%%' -e 's%,[+]%\n%g' | sort -u | tr '\n' ' ')
do
 grep -q -F "|${aDEP}|" xdb2and9
 if [ $? -ne 0 ];then
  #problem with these new ones. some are supposed to go into the devx only
  # (apart from those that are named *-devel)...
  grep -q "^yes.*|${aDEP}|.*|dev[,|]" <<<${PKGS_SPECS_TABLE}
  if [ $? -eq 0 ];then
   grep -h -F "|${aDEP}|" xdb2and9VOID >> xdb2and9NEW-DEVX
  fi
  grep -h -F "|${aDEP}|" xdb2and9VOID >> xdb2and9NEW
 fi
done


if [ -s xdb2and9NEW ];then
 sort --key=2,2 --field-separator="|" -u xdb2and9 xdb2and9NEW > xdb2and9ACCUM
fi

#remove pkgs with no deps...
grep '|$' xdb2and9ACCUM > xdb-nodeps
grep -v '|$' xdb2and9ACCUM > xdb-hasdeps
#ex: |apr-util|+apr,+expat,+glibc,+libcrypto3,+libssl3,+libuuid,+libxcrypt

#create a topological list...
echo -n '' > tlist
echo -n '' > names-changed #20240414
while IFS='|' read Pre Name Deps
do
 #name is actual name (kirkstone, pet pkgs), for tlist it needs to be void name...
 F1="$(grep -h -G "^${Name}|" ${L1}/support/name-oe2void/case ${L1}/support/name-oe2void/hyphen ${L1}/support/name-oe2void/number ${L1}/support/name-oe2void/maybe | head -n 1)"
 if [ ! -z "$F1" ];then
  echo "$F1" >> names-changed #20240414
  Name="${F1/*|/}"
 fi
 for aDep in $(sed -e 's%^[+]%%' -e 's%,[+]% %g' <<<${Deps})
 do
  echo "${aDep} ${Name}" >> tlist
 done
done < xdb-hasdeps

#there are circular deps, but let's have a go at a tsort, ignore errors...
#must use tsort from coreutils, not busybox...
echo " Performing a topological sort"
echo -n '' > xdb-hasdeps-sorted
echo -n '' > xdb-hasdeps-devel-sorted
tsort tlist >tsorted 2>/dev/null
for aN in $(cat tsorted)
do
 [ -z "$aN" ] && continue
 #ignore some pkgs...
 grep -q -x -F -f /tmp/woofQV/PKG_NAME_IGNORElines <<<${aN}
 if [ $? -eq 0 ];then
  #20240224 but may want to install scarthgap alternative. ex: shadow
  grep -q -G "|${aN}|.*|${FOREIGN_COMPAT_VERSION}|" ${E1}/woof-installed-packages-orig
  if [ $? -ne 0 ];then
   continue
  fi
 fi
 #-devel pkgs should all be in the devx...
 case "$aN" in
  *-devel)
   grep -F "|${aN}|" xdb-hasdeps >> xdb-hasdeps-devel-sorted
   continue
  ;;
 esac
 #these also to devx...
 grep -F "|${aN}|" xdb2and9NEW-DEVX >> xdb-hasdeps-devel-sorted
 if [ $? -eq 0 ];then
  continue
 fi
 #20240414...
 bN="$(grep "|${aN}$" names-changed | head -n 1)"
 if [ -z "$bN" ];then
  grep -F "|${aN}|" xdb-hasdeps >> xdb-hasdeps-sorted
 else
  #change void name back to the scarthgap name...
  grep -F "|${bN/|*/}|" xdb-hasdeps >> xdb-hasdeps-sorted
 fi
done

#compose woof-installed-packages-dep-order...
echo -n '' > woof-installed-packages-dep-order
CNT=0
for aP in $(cat xdb-hasdeps-sorted)
do
 [ -z "$aP" ] && continue
 aP="${aP%|*}|" #remove the deps
 #20240414 have changed back to kirkstone or pet name above. no need for this test...
 ##$aP is void name. need to check if a kirkstone or pet match...
 #F0="${aP%|*}" #drop trailing |, keep leading |.
 #F1="$(grep -h -G "${F0}$" ${L1}/support/name-oe2void/case ${L1}/support/name-oe2void/hyphen ${L1}/support/name-oe2void/number ${L1}/support/name-oe2void/maybe | head -n 1)"
 #if [ ! -z "$F1" ];then
 # oeName="${F1/|*/}"
 # grep -F "|${oeName}|" woof-installed-packages >> woof-installed-packages-dep-order
 # [ $? -eq 0 ] && continue
 #fi
 grep -F "$aP" woof-installed-packages >> woof-installed-packages-dep-order
 [ $? -eq 0 ] && continue
 grep -F "$aP" ${L1}/configure/${xARCH}/Packages-${DISTRO_BINARY_COMPAT}-${DISTRO_COMPAT_VERSION} >> woof-installed-packages-dep-order
done

for aP in $(cat xdb-nodeps)
do
 [ -z "$aP" ] && continue
 grep -F "$aP" woof-installed-packages >> woof-installed-packages-dep-order
 [ $? -eq 0 ] && continue
 grep -F "$aP" ${L1}/configure/${xARCH}/Packages-${DISTRO_BINARY_COMPAT}-${DISTRO_COMPAT_VERSION} >> woof-installed-packages-dep-order
done

sed -i '/^$/d' woof-installed-packages-dep-order
cp -f woof-installed-packages-dep-order ${E1}/woof-installed-packages-dep-order

#restore alphabetic order...
sort --key=1,1 --field-separator="|" woof-installed-packages-dep-order > ${E1}/woof-installed-packages
sync
echo "Created: ${E1}/woof-installed-packages-dep-order"
###end###
